name: 'publish'

on: 
  repository_dispatch:
    types: [publish-app]
    
jobs:
  create-release:
    permissions:
      contents: write
    runs-on: ubuntu-20.04
    outputs:
      release_id: ${{ steps.create-release.outputs.result }}

    steps:
      - name: Clone Code Repository
        run: git clone -b main "https://gitlab.com/mathezirkel/mathezirkel-app/client" tauri-client-app
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: get version
        run: echo "PACKAGE_VERSION=$(node -p "require('./tauri-client-app/src-tauri/tauri.conf.json').package.version")" >> $GITHUB_ENV
      - name: create release
        id: create-release
        uses: actions/github-script@v6
        with:
          script: |
            const { data } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `app-v${process.env.PACKAGE_VERSION}`,
              name: `Desktop App v${process.env.PACKAGE_VERSION}`,
              body: 'Take a look at the assets to download and install this app.',
              draft: true,
              prerelease: false
            })
            return data.id

  build-tauri:
    needs: create-release
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Clone Code Repository
        run: git clone -b main "https://gitlab.com/mathezirkel/mathezirkel-app/client" tauri-client-app
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './tauri-client-app/src-tauri -> target'
      - name: install Trunk (MacOs)
        if: matrix.platform == 'macos-latest'
        run: wget -qO- https://github.com/thedodd/trunk/releases/download/v0.17.3/trunk-x86_64-apple-darwin.tar.gz | tar -xzf-
      - name: install Trunk (Linux)
        if: matrix.platform == 'ubuntu-20.04'
        run: wget -qO- https://github.com/thedodd/trunk/releases/download/v0.17.3/trunk-x86_64-unknown-linux-gnu.tar.gz | tar -xzf-
      - name: install Trunk (Windows)
        if: matrix.platform == 'windows-latest'
        run: |
          wget https://github.com/thedodd/trunk/releases/download/v0.17.3/trunk-x86_64-pc-windows-msvc.zip -O trunk.zip
          unzip trunk
      - name: install WASM Target 
        run: rustup target add wasm32-unknown-unknown
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}
        with:
          projectPath: "./tauri-client-app"
          releaseId: ${{ needs.create-release.outputs.release_id }}

  publish-release:
    permissions:
      contents: write
    runs-on: ubuntu-20.04
    needs: [create-release, build-tauri]

    steps:
      - name: publish release
        id: publish-release
        uses: actions/github-script@v6
        env:
          release_id: ${{ needs.create-release.outputs.release_id }}
        with:
          script: |
            github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: process.env.release_id,
              draft: false,
              prerelease: false
            })
